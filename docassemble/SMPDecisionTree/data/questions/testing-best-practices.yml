---
mandatory: reuse
question: |
  Testing
fields:
  - note: |
      How will your software be tested? Please provide a link to automated testing results, if available.

      Incorporate tests to ensure your software continues to work as intended. Different types of testing (unit, functional, integration, linting, typing, regression, etc.) could be used. Tests in turn should also be documented. Coverage tools should also be used to assess the extent of the tested code.
  - no label: testing
    #default: manual testing
    hint: Testing is only manual for now, but we plan to use automated testing as part of a CI/CD (Continuous Integration/Continuous Deployment) pipeline.
    input type: area
    rows: 10
  - note: |
      ### Code Quality Best Practices

      What coding best practices do you plan to follow in your code?

      It is important to make sure your software adheres to relevant code quality standards (styling, modularity, etc.). You should also use tools for collaborative development to measure code quality. For more information on code quality, you can look up the chapter of the [Turing Way](https://book.the-turing-way.org/reproducible-research/code-quality).
      
      If you are using a {software quality checklist}, please point out which one.
  - no label: quality
    #default: I only write perfect code.
    hint: Our software currently covers 85% of the checklist at https://www.bestpractices.dev. We aim for 95% at the end of the project.
    input type: area
    rows: 10
terms:
  software quality checklist: |
    A checklist outlining useful software best practices. If your institution does not have their own, you can find one at [bestpractices.dev](https://www.bestpractices.dev).
---