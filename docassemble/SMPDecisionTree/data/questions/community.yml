---
mandatory: reuse
section: section_multi_user
# When setting the `multi_user` variable in this section, we want to recalculate the items in the navigation bar.
# In the root .yml file there is a code section that sets a dummy `navigation_recalculated` variable.
# By depending on (`depends on`) this variable here, we force it to be re-evaluated and thus re-run the navigation sections code.
# TODO This is very clunky. If there's an easier way, feel free to improve this.
depends on: navigation_recalculated
question: |
  Users/Collaborators
subquestion: |
  Do you expect `${ software_name }` to be used by others, or integrated or modified by other developers, now or in the future?

  <details>
    <summary><b>Decision Help</b></summary>
    <p>With this question, you answer if you expect people not involved in the original development of the software to make use of it. People, in other words, that need to be taught how to deploy and use the software without being able to readily communicate with the original developer.</p>
    
    <p>If so, you will need to think about:
      <ul>
      <li>How you will explain how to use and develop ${ software_name }.</li> <!--documentation-->
      <li>Which coding best practices to follow to facilitate deployment and use.</li> <!--quality-->
      <li>How to provide long term maintenance.</li> <!--maintenance-->
      </ul>
    </p>
    
    <br>
    <h5>Example projects that would answer “yes” here</h5>
    <ul>
      <li>A software package that you co-develop with collaborators and plan to make available to your research field.</li>
      <li>Tools for extracting, transforming and visualizing visuals of architectural design from PDF files: <a href="https://visarchpy.readthedocs.io">VisArchPy</a></li>
      <li>A web application that researchers use to create questionnaires to collect data from citizens involved in participatory urban planning.</li>
    </ul>

    <h5>Example projects that would answer “no” here</h5>
    <ul>
      <li>Single-use script for a power-line data analysis for one paper.</li>
      <li>A custom BASH application for organizing and backing up millions of files containing results of a weather model running in an in-house computer cluster.</li>
    </ul>
  </details>
  <br>
yesno: multi_user
---
# When clicking on the navigation section "Users", ask again the question that defines the variable `multi_user`.
event: section_multi_user
code: force_ask('multi_user')
---
mandatory: multi_user
section: section_community
question: |
  Community
subquestion: |
  Does `${ software_name }` have, or do you plan to build a {community} around it?

  <details>
    <summary><b>Decision Help</b></summary>
    <p>With this question, you answer if you expect a community to form around your software. If so, you will need to think about:
    <ul>
    <li>Whether you will provide comprehensive support or training.</li> <!--support-->
    <li>How to provide long term maintenance.</li> <!--maintenance-->
    </ul>

    <h5>Example projects that would answer “yes” here</h5>
    <ul>
      <li>A jupyter notebook extension that enables researchers across disciplines to prepare, upload and download datasets from Zenodo, and other research data repositories: <a href="https://fairly.readthedocs.io">fairly.readthedocs.io</a></li>
    </ul>

    <h5>Example projects that would answer “no” here</h5>
    <ul>
      <li>A software package that you co-develop with collaborators and plan to make available to your research field, but that does not call for further expansion.</li>
    </ul>
  </details>
  <br>
terms:
  community: |
    A group of people, generally outside your direct collaborators or contacts, that is using or developing the software (semi-)autonomously.
yesno: community
---
# When clicking on the navigation section "Community", ask again the question that defines the variable `community`.
event: section_community
code: force_ask('community')
---
